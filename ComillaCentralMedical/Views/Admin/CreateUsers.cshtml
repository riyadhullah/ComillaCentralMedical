@model ComillaCentralMedical.Models.User

@{
    ViewBag.Title = "CreateUsers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Users</h2>

@using (Html.BeginForm("CreateUsers", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div style="display: flex; gap: 30px;">

            <!-- Left Column -->
            <div style="flex: 1;">
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName)
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone)
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password)
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Role)
                    @Html.DropDownListFor(model => model.Role, new SelectList(
                    new List<string> { "Admin", "Receptionist", "Accountant" }
                    ), "Select Role", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Right Column -->
            <div style="flex: 1;">
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender)
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new List<String> { "Male", "Female" }),
                    "Select Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DOB)
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Profile Image")
                    <input type="file" name="ImageFile" class="form-control" />
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address)
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>


            </div>
        </div>

        <div class="form-group mt-3">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
}

<div class="mt-3">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-link" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
