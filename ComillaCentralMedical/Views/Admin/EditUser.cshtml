@model ComillaCentralMedical.Models.User

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center my-4">Edit User Information</h2>

@using (Html.BeginForm("EditUser", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-10 card shadow p-4">
                <h4 class="mb-4 text-center">User Profile Information</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="row">
                    <!-- Profile Image Upload -->
                    <div class="col-md-4 text-center">
                        <label class="form-label">Profile Image</label>
                        <input type="file" name="ImageFile" class="form-control mb-2" onchange="previewImage(event)" accept=".jpg,.jpeg,.png" />

                        <small class="text-muted">Only JPG or PNG allowed</small>

                        <div class="mt-3">
                            <img id="preview" src="@Url.Content(Model.ImagePath ?? "~/Content/Images/default-user.png")" alt="Preview"
                                 class="img-thumbnail rounded-circle"
                                 style="width: 150px; height: 150px; object-fit: cover;" />
                        </div>
                    </div>

                    <!-- Form Fields -->
                    <div class="col-md-8">
                        <div class="row">
                            <!-- Left Column -->
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.FullName)
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.Phone)
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    @Html.Label("Password")
                                    <input type="text" name="Password" class="form-control" value="@Model.Password" />
                                    @if (TempData["PasswordError"] != null)
                                    {
                                        <div class="text-danger">@TempData["PasswordError"]</div>
                                    }

                                </div>

                                <div class="form-group mb-3">
                                    @Html.Label("Re-enter Password")
                                    <input type="text" name="ConfirmPassword" class="form-control" value="@Model.Password" />
                                </div>


                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.Role)
                                    @Html.DropDownListFor(model => model.Role, new SelectList(
                                        new List<string> { "Admin", "Receptionist", "Accountant" }, Model.Role
                                    ), "Select Role", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Right Column -->
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.Email)
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.Gender)
                                    @Html.DropDownListFor(model => model.Gender, new SelectList(
                                        new List<string> { "Male", "Female" }, Model.Gender
                                    ), "Select Gender", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.DOB)
                                    @Html.TextBoxFor(model => model.DOB, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.Address)
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="form-group text-center mt-4">
                    <input type="submit" value="Update" class="btn btn-primary px-4" />
                </div>
            </div>
        </div>
    </div>
}

<div class="text-center mt-3">
    @Html.ActionLink("Back to List", "ManageUsers", null, new { @class = "btn btn-link" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function previewImage(event) {
        const input = event.target;
        const reader = new FileReader();

        reader.onload = function () {
            const img = document.getElementById('preview');
            img.src = reader.result;
            img.style.display = 'block';
        };

        if (input.files && input.files[0]) {
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>
